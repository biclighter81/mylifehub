name: build-deploy-staging
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # generate Docker tags based on the following events/attributes
          images: |
            biclighter81/mylifehub-api
            biclighter81/mylifehub
            
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - 
        name: Git checkout
        uses: actions/checkout@v2
      -
        name: Build and push API
        # You may pin to the exact commit or the version.
        uses: docker/build-push-action@v4
        with:
          tags: biclighter81/mylifehub-api:${{ github.sha }}
          # List of metadata for an image
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: ./apps/api/api.dockerfile
          push: true
      - 
        name: Build and push WEB
        # You may pin to the exact commit or the version.
        uses: docker/build-push-action@v4
        with:
          tags: biclighter81/mylifehub:${{ github.sha }}
          # List of metadata for an image
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: ./apps/next/next.dockerfile
          push: true